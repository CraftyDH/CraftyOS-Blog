<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>CraftyOS Blog</title><link>https://craftydh.github.io/CraftyOS-Blog/</link><description>Recent content on CraftyOS Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 03 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://craftydh.github.io/CraftyOS-Blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Multitasking -- Async/Await, Disk IO and PCI Enumeration</title><link>https://craftydh.github.io/CraftyOS-Blog/posts/multitasking/</link><pubDate>Sun, 03 Oct 2021 00:00:00 +0000</pubDate><guid>https://craftydh.github.io/CraftyOS-Blog/posts/multitasking/</guid><description>Multitasking via async/await Multitasking is an important step in making a functional OS. There are 2 models that I could employ, cooperative and preemptive multitasking. Cooperative is easier to implement because tasks voluntarily give up time to allow to scheduler to spawn the next task. Benefits of Cooperative multitasking include a smaller resource footprint because tasks can save what it needs before switching, whilst the preemptive model must save everything as the kernel has no way of knowing what the task will need to keep.</description></item><item><title>Assessment Break</title><link>https://craftydh.github.io/CraftyOS-Blog/posts/assessment_break/</link><pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate><guid>https://craftydh.github.io/CraftyOS-Blog/posts/assessment_break/</guid><description>As the assessment week is approaching I have decided to take a break until the holidays. This means that the timeline will be pushed backwards by at least 2 weeks, however I feel confident that I should be able to catch up and by the end of the holidays be back up to schedule.</description></item><item><title>Memory - Mapping and a Global Allocator</title><link>https://craftydh.github.io/CraftyOS-Blog/posts/memory/</link><pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate><guid>https://craftydh.github.io/CraftyOS-Blog/posts/memory/</guid><description>Memory Memory is an essential component to a functioning OS, it allows for dynamic content such as strings and other data types which need to be stored on the heap. Therefore mapping will first need to be implemented to be able to read and write to virtual memory locations which are stored at some other physical memory location. After this a Global Allocator which takes a page and builds a heap on it, for these purpose a linked list allocator will be used for allocations over 2 MiB, and a Fixed Size Allocator for smaller allocations allowing for fast allocations.</description></item><item><title>Interrupts - Timers and Keyboard</title><link>https://craftydh.github.io/CraftyOS-Blog/posts/interrupts/</link><pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate><guid>https://craftydh.github.io/CraftyOS-Blog/posts/interrupts/</guid><description>Interrupts Interrupts are essential to a computer functioning, they allow your keyboard and mouse to interrupt the CPU and tell it that an event is waiting. This means that when a program is running the kernel gets control of the CPU so that it can process the keyboard event. This also enables the CPU to tell us when we do something stupid such as dividing 0 by 0.
Timeline In this week the interrupts and exceptions were quite easy to write with Phillop&amp;rsquo;s tutorials help.</description></item><item><title>Take 2, a fresh start...</title><link>https://craftydh.github.io/CraftyOS-Blog/posts/restart/</link><pubDate>Sun, 22 Aug 2021 00:00:00 +0000</pubDate><guid>https://craftydh.github.io/CraftyOS-Blog/posts/restart/</guid><description>Why must I restart? Well quite simply UEFI is a pain. But seriously I spend 72 hours rewriting and rewriting my interrupt handlers to no avail. I believe that the problem was that I could not setup paging correctly and as such caused general protection faults and as I could not handle these faults I wasted so much time. Therefore in order to catch up to my schedule I have chosen to follow Philipp Oppermann&amp;rsquo;s blog_os to completion and then implement the other features on top.</description></item><item><title>The beginnings of CraftyOS</title><link>https://craftydh.github.io/CraftyOS-Blog/posts/start/</link><pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate><guid>https://craftydh.github.io/CraftyOS-Blog/posts/start/</guid><description>Why make an OS? The purpose of this project is to learn how computers work at a basic level by programming a bare bones OS. This will help myself learn the various complexities behind the OS abstractions that are used in conventional programs.
Additionally as this project is for a school project, I had the requirement of creating a digitial application in 16 weeks. With that in mind, I wanted to choose a complex topic where I could make something cool while learning another area of computer science.</description></item></channel></rss>